set myExcelFile to Workbook(ResourcePath("Test12.xlsx"))

//Tests new features of accessing Excel data using workbook function
put ReturnWorkbookProperties(myExcelFile)

//Tests new features of accessing Excel data using worksheet function
set myNormalizedWorksheet to Worksheet(myExcelFile,"Normalized")
set myNotNormalizedWorksheet to Worksheet(myExcelFile,"Not Normalized")
put ReturnWorksheetProperties(myNormalizedWorksheet, myNotNormalizedWorksheet)


//Resets tab colors to no colors
ResetTabColors myExcelFile

//Sets Tab Colors for worksheets
SetTabColors myExcelFile

//Resets tab colors to no colors
ResetTabColors myExcelFile

//Sets Tab Colors for worksheets
SetTabColorsByNumber myExcelFile

//Returns Tab Colors for worksheets
ReturnTabColors myExcelFile

//Alphabetizes worksheets by name
put Workbook(ResourcePath("PublicAPIs1.xlsx")) into mySortingExcel
AlphabetizeWorksheets mySortingExcel

//Lists hyperlinks from Excel
set myHyperlinksExcels to ["PublicAPIs1.xlsx","MacroFileMatching.xlsx"]
ReturnHyperlinks myHyperlinksExcels

//Tests adding worksheets to a workbook
AddWorksheets myExcelFile, myNormalizedWorksheet

//Tests patterns of different colors
set myColorsAndPatternsFile to refer to Workbook(ResourcePath("ColorsAndPatterns.xlsx"))
set myWorksheetName to "Canvas"
set myCanvas to refer to Worksheet(myColorsAndPatternsFile,myWorksheetName)

SetColorsAndPatterns myColorsAndPatternsFile, myCanvas

put ("B".."R") as a list into myColumns
put (3..32) as a list into myRows
set the patternForegroundColor of cell("B3") of myCanvas to darkgreen
repeat with each item myCurrentColumn of myColumns
	repeat with each item myCurrentRow of myRows
		put cell(myCurrentColumn&myCurrentRow) of myCanvas into myCurrentCell
		--put item 1 of (cell(myCanvas,myCurrentCell) split by space) into myColor
		--put item 2 of (cell(myCanvas,myCurrentCell) split by space) into myPattern
		put item 1 of (myCurrentCell split by space) into myColor
		put item 2 of (myCurrentCell split by space) into myPattern
		try set the patternBackgroundColor of myCurrentCell to myColor
		try set myCurrentCell.fillPattern to myPattern
		set the patternForegroundColor of cell(myCurrentColumn&myCurrentRow) of myCanvas to myColor
		--set the fillPattern of cell(myCurrentColumn&myCurrentRow) of myCanvas to myPattern
	end repeat
end repeat



